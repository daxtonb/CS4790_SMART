@page
@using Newtonsoft.Json
@model Smart.Pages.Students.IndexModel

@{
    ViewData["Title"] = "Index";
}

@*
    TO DO
        - Only show applicants!
        - Add search table search functionality
        - create view model to show application rating and status (?)
*@

<h1>Students</h1>
<style type="text/css">
    #element1 {
        display: inline-block;
        width: 45%;
        padding: 10px
    }

    #element2 {
        display: inline-block;
        width: 45%;
        margin-left: 100px;
        padding: 30px
    }
</style>

<div id="element1">
    <form asp-page="./Index" method="get">
        <div class="form-actions no-color">
            <p>
                Find by name:
                <input type="text" name="SearchString" value="@Model.CurrentFilter" />
                <input type="submit" value="Search" class="btn btn-primary" /> |
                <a asp-page="./Index">Back to full List</a>
            </p>
        </div>
    </form>
</div>
<div id="element2">
    @if (User.IsInRole("Admin"))
    {
        <a asp-page="Create" class="btn btn-info"><i class="fas fa-plus"></i> &nbsp;  Create New Student </a>
    }

</div>


<table class="table table-striped border col-md-12">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.FirstSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Student[0].FirstName)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.LastSort"
                   asp-route-currentFilter="@Model.CurrentFilter">
                    @Html.DisplayNameFor(model => model.Student[0].LastName)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Student[0].EnglishLevel)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Student[0].ItLevel)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Student)
        {
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EnglishLevel)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.ItLevel)
                    </td>
                    <td style="width:150px">
                        <div class="btn-group" role="group">
                            @if (User.IsInRole("Admin"))
                            {
                                <a class="btn btn-primary text-white" asp-page="./Edit" asp-route-id="@item.StudentId">
                                    <i class="fas fa-edit"></i>
                                </a>
                            }
                            <a class="btn btn-success text-white" asp-page="Details" asp-route-Id="@item.StudentId">
                                <i class="fas fa-list-alt"></i>
                            </a>
                            @if (User.IsInRole("Admin"))
                            {
                                <a class="btn btn-danger text-white" asp-page="Delete" asp-route-Id="@item.StudentId">
                                    <i class="fas fa-trash-alt"></i>
                                </a>
                            }
                            
                        </div>
                    </td>

                    @*<td>
                            <a asp-page="./Edit" asp-route-id="@item.StudentId">Edit</a> |
                            <a asp-page="./Details" asp-route-id="@item.StudentId">Details</a> |
                            <a asp-page="./Delete" asp-route-id="@item.StudentId">Delete</a>
                        </td>*@
                </tr>
            }
        }
    </tbody>
</table>



@{
    var prevDisabled = !Model.Student.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.Student.HasNextPage ? "disabled" : "";
}

<div style="text-align:center">
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Student.PageIndex - 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @prevDisabled">
        Previous
    </a>
    @Model.Student.PageIndex of @Model.Student.TotalPages
    <a asp-page="./Index"
       asp-route-sortOrder="@Model.CurrentSort"
       asp-route-pageIndex="@(Model.Student.PageIndex + 1)"
       asp-route-currentFilter="@Model.CurrentFilter"
       class="btn btn-primary @nextDisabled">
        Next
    </a>
</div>