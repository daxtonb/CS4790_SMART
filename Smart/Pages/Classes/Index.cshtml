@page "{schoolId:int?}/{termId:int?}/{courseId:int?}"
@model Smart.Pages.Classes.IndexModel
@{
    ViewData["Title"] = "Index";
    Layout = "~/Pages/Shared/_Layout.cshtml";
    bool termHasNotStartedYet = Model.SelectedTerm.StartDate > DateTime.Today;
}

<div id="main-section">

    @if (termHasNotStartedYet)
    {
        <button type="button" class="btn btn-primary mb-3" data-toggle="modal" data-target="#form-modal" onclick="getCourseForm()"><i class="fa fa-plus"></i> Course</button>
    }
    <nav class="navbar navbar-expand-lg navbar-dark bg-primary justify-content-center">
        <div class="col-3">
            <div class="align-content-center">
                <select asp-for="SchoolId" asp-items="Model.Schools.Select(t => new SelectListItem { Value = t.SchoolId.ToString(), Text = t.Name })" style="background:#fff" class="form-control" onchange="window.location.replace('/Classes/' + this.value + '/@(Model.SelectedTerm.TermId)@(Model.SelectedCourseId.HasValue ? $"/{Model.SelectedCourseId.Value}" : "")');"></select>
            </div>
        </div>
        <div class="col-3">
            <div class="align-content-center">
                <select asp-for="SelectedTerm.TermId" asp-items="Model.Terms.Select(t => new SelectListItem { Value = t.TermId.ToString(), Text = t.Name })" style="background:#fff" class="form-control" onchange="window.location.replace('/Classes/@(Model.SchoolId)/' + this.value + '@(Model.SelectedCourseId.HasValue ? $"/{Model.SelectedCourseId.Value}" : "")');"></select>
            </div>
        </div>
    </nav>

    @if (Model.Courses != null && Model.Courses.Any())
    {
        <div class="accordion" id="accordionExample">
            @foreach (var course in Model.Courses)
            {
                string collapseId = $"collapse-course-{course.Course.CourseId}";
                bool isSelectedCourse = Model.SelectedCourseId.HasValue && Model.SelectedCourseId.Value == course.Course.CourseId;

                <div class="card">
                    <div class="card-header parent" data-toggle="collapse" data-target="#@collapseId" aria-expanded="@(isSelectedCourse ? "true": "false")" aria-controls="@collapseId" style="cursor:pointer">
                        <h4 class="mb-0" style="display:inline-block">
                            @course.Course.Name
                        </h4>
                        <div class="btn-group btn-group-sm float-right" role="group">
                            <a class="btn btn-primary text-white" data-toggle="modal" data-target="#form-modal" onclick="getClassForm(@course.Course.CourseId, @Model.SelectedTerm.TermId, @course.Class?.ClassId)">
                                <i class="fas fa-edit"></i>
                            </a>
                            <a class="btn btn-danger text-white" data-toggle="modal" data-target="#form-modal" onclick="getClassForm(@course.Course.CourseId, @Model.SelectedTerm.TermId, @course.Class?.ClassId)">
                                <i class="fas fa-trash-alt"></i>
                            </a>
                        </div>
                    </div>

                    <div id="@collapseId" class="collapse @(isSelectedCourse? "show" : "")" aria-labelledby="headingOne" data-parent="#accordionExample">
                        <div class="card-body">
                            @if (termHasNotStartedYet && course.Class == null)
                            {
                                <button class="btn btn-primary mb-3" data-toggle="modal" data-target="#form-modal" onclick="getClassForm(@course.Course.CourseId, @Model.SelectedTerm.TermId)"><i class="fa fa-plus"></i> Class</button>
                            }
                        <div id="course-@course.Course.CourseId-classes">
                            @if (course.Class != null)
                            {
                                <table class="table table-sm">
                                    <thead></thead>
                                    <tbody>
                                        <tr>
                                            <th style="width: 200px;" role="rowheader">Instructor</th>
                                            <td>@course.Class.InstructorName</td>
                                        </tr>
                                        <tr>
                                            <th role="rowheader">Enrollments</th>
                                            <td>@course.Class.EnrolledStudentCount/@course.Class.Capacity</td>
                                        </tr>
                                        <tr>
                                            <th role="rowheader">Passing Grade Threshold</th>
                                            <td>@course.Class.PassingGradeThreshold%</td>
                                        </tr>
                                        <tr>
                                            <th role="rowheader">Meetings</th>
                                            <td>
                                                @foreach (var meetingNumber in course.Class.MeetingsByNumber)
                                                {
                                                    <div class="row mb-2">
                                                        <div class="col-1 justify-content-center align-self-center text-right" style="font-weight:800;width:1.5em">
                                                            @meetingNumber.Key
                                                        </div>
                                                        <div class="col-11" style="margin-top:auto;margin-bottom:auto">
                                                            <ul class="m-0 p-1" style="list-style:none">
                                                                @foreach (var meeting in meetingNumber.ToList())
                                                                {
                                                                    <li>@meeting.ScheduleAvailability.DayOfWeek @meeting.ScheduleAvailability.StartTime.ToString12HourTime()-@meeting.ScheduleAvailability.EndTime.ToString12HourTime()</li>
                                                                }
                                                            </ul>
                                                        </div>
                                                    </div>
                                                }
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                                <iframe src="/Classes/@course.Class.ClassId/Students" style="width:100%;height:60vh;border:none">

                                </iframe>
                            }
                            else
                            {
                                <div class="alert alert-primary">No @(course.Course.Name) class @(termHasNotStartedYet ? "has been created yet" : $"was created") for @Model.SelectedTerm.Name</div>
                            }
                        </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
    else
    {
        <div class="alert alert-primary">No courses have been created yet.</div>
    }
</div>


@section Scripts
{
    <script>
        const classBaseUrl = '/Classes?handler=';

        function getClassForm(courseId, termId, classId) {
            const getHandler = classBaseUrl + `ClassForm&courseId=${courseId}&termId=${termId}` + (classId ? '&classId=' + classId : '');
            const postHandler = classBaseUrl + 'SaveClass';
            const modalTitle = `${classId ? 'Edit' : 'Create'} Class`;
            getForm(modalTitle, getHandler, postHandler);
        }

        function getStudentsList(classId) {
            const getHandler = classBaseUrl + `StudentsList&classId=${classId}`;
            const modalTitle = 'Roster';
            getForm(modalTitle, getHandler);
        }
    </script>
}